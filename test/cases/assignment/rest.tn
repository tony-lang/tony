# @file index.tn
a :: [Number] := []
print(a[0].to_str)

b :: { String: Number } := {}
print(b->x.to_str)

[c :: Number, ...d :: [Number]] := [1]
print(c.to_str)
print(d[0].to_str)

{ a: g :: Number, ...h :: { String: Number } } := { a: 1, b: 2, c: 3 }
print(g.to_str)
print(h->b.to_str)
print(h->c.to_str)

{ [1]: i :: Number, ...j :: { Number: Number } } := { [1]: 1, [3]: 2, [5]: 3 }
print(i.to_str)
print(j[3].to_str)
print(j[5].to_str)

(k, ...l) := (1, 2, 'hello')
print(k.to_str)
print(l[0].to_str)
print(l[1])

# fn := (...x) => x
# print(fn(1, 2, 3)[0].to_str)
# print(fn(...[4, 5, 6])[0].to_str)

# @output
# undefined
# undefined
# 1
# undefined
# 1
# 2
# 3
# 1
# 2
# 3
# 1
# 2
# hello
